@using System.Security.Claims;
@using CommunicationsApp.Domain.Common.Enums;
@model CommunicationsApp.Application.DTOs.Message
@{
    int currentUserId = int.Parse(User.FindFirst(ClaimTypes.NameIdentifier).Value);
    bool isCurrentUserTheSender = Model.User.Id == currentUserId;
}

<div id="openMessage@(Model.Id)" data-id="@Model.Id" class="message-container @(isCurrentUserTheSender ? "sender-message-container" : "")">
    <div class="message-bubble @(isCurrentUserTheSender ? "sender-message-bubble" : "")">
        <div class="d-flex">
            @if (!isCurrentUserTheSender)
            {
                <p class="text-start fw-bold">@Model.User.UserName</p>
            }

            @if (isCurrentUserTheSender && !Model.DeletedAt.HasValue)
            {
                <div data-options-list class="ms-auto dropup badge">
                    <button class="btn dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false"></button>
                    <ul class="dropdown-menu">
                        <li>
                            <form data-delete-form-id="@Model.Id" asp-controller="Messages" asp-action="Delete" asp-route-id="@Model.Id">
                                <input type="submit" value="Delete" class="dropdown-item text-danger" />
                            </form>
                        </li>
                    </ul>
                </div>
            }
        </div>

        <div>
            @if (Model.Media != null && Model.Media.Any())
            {
                @foreach (var file in Model.Media)
                {
                    @if (file.Type == MediaType.Image)
                    {
                        <img src="/media/images/@(file.Filename)" />
                    }
                    else if (file.Type == MediaType.Video)
                    {
                        <video controls>
                            <source src="/media/videos/@(file.Filename)" />
                        </video>
                    }
                    else
                    {
                        <a href="/media/documents/@(file.Filename)" download="">
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-file-earmark-arrow-down" viewBox="0 0 16 16">
                                <path d="M8.5 6.5a.5.5 0 0 0-1 0v3.793L6.354 9.146a.5.5 0 1 0-.708.708l2 2a.5.5 0 0 0 .708 0l2-2a.5.5 0 0 0-.708-.708L8.5 10.293z" />
                                <path d="M14 14V4.5L9.5 0H4a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2M9.5 3A1.5 1.5 0 0 0 11 4.5h2V14a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1h5.5z" />
                            </svg>
                        </a>
                    }
                }
            }
        </div>

        <p id="openMessageText@(Model.Id)" class="text-start">
            @if (Model.DeletedAt.HasValue)
            {
                <span class="fst-italic text-body-secondary">@Model.Text</span>
            }
            else
            {
                <text>@Model.Text</text>
            }
        </p>

        <p class="fst-italic @(isCurrentUserTheSender ? "text-end" : "text-start")">@Model.CreatedAt.ToShortTimeString()</p>
    </div>
</div>